{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "document.querySelectorAll('.swiper.is-standard').forEach((swiperElement, index) => {\n  const swiperNavigation = swiperElement.parentElement.querySelector(\n    '.swiper-navigation.is-standard'\n  );\n\n  const rewindAttribute = swiperElement.getAttribute('swiperRewind');\n  const loopAttribute = swiperElement.getAttribute('swiperLoop');\n  const directionAttribute = swiperElement.getAttribute('swiperDirection');\n  const startSlideAttribute = swiperElement.getAttribute('swiperSlideStart');\n  const fillEmptySlotsAttribute = swiperElement.getAttribute('swiperFillEmptySlots');\n  const effectAttribute = swiperElement.getAttribute('swiperEffect');\n  const fadeCrossfadeAttribute = swiperElement.getAttribute('swiperEffectFadeCrossfade');\n\n  // Attributes for Coverflow effect\n  const coverflowDepthAttribute = swiperElement.getAttribute('swiperEffectCoverflowDepth');\n  const coverflowModifierAttribute = swiperElement.getAttribute('swiperEffectCoverflowModifier');\n  const coverflowRotateAttribute = swiperElement.getAttribute('swiperEffectCoverflowRotate');\n  const coverflowScaleAttribute = swiperElement.getAttribute('swiperEffectCoverflowScale');\n  const coverflowStretchAttribute = swiperElement.getAttribute('swiperEffectCoverflowStretch');\n  const coverflowSlideShadowsAttribute = swiperElement.getAttribute(\n    'swiperEffectCoverflowSlideShadows'\n  );\n\n  // Attributes for Flip effect\n  const flipLimitRotationAttribute = swiperElement.getAttribute('swiperEffectFlipLimitRotation');\n  const flipSlideShadowsAttribute = swiperElement.getAttribute('swiperEffectFlipSlideShadows');\n\n  // Attributes for Cube effect\n  const cubeShadowAttribute = swiperElement.getAttribute('swiperEffectCubeShadow');\n  const cubeSlideShadowsAttribute = swiperElement.getAttribute('swiperEffectCubeSlideShadows');\n  const cubeShadowOffsetAttribute = swiperElement.getAttribute(\n    'swiperEffectCubeShadowShadowOffset'\n  );\n  const cubeShadowScaleAttribute = swiperElement.getAttribute('swiperEffectCubeShadowShadowScale');\n\n  // Attributes for Cards effect\n  const cardsPerSlideOffsetAttribute = swiperElement.getAttribute(\n    'swiperEffectCardsPerSlideOffset'\n  );\n  const cardsPerSlideRotateAttribute = swiperElement.getAttribute(\n    'swiperEffectCardsPerSlideRotate'\n  );\n  const cardsRotateAttribute = swiperElement.getAttribute('swiperEffectCardsRotate');\n  const cardsSlideShadowsAttribute = swiperElement.getAttribute('swiperEffectCardsSlideShadows');\n\n  const defaultSpeed = 1000; // Default speed for manual interactions\n  const defaultAutoplayDelay = 5000; // Default autoplay delay\n  const defaultSlidesPerView = 3; // Default slides per view\n  const defaultSpaceBetween = 16; // Default space between slides\n  const marqueeSpeed = 1; // Speed for marquee mode\n\n  // Helper functions\n  const getSlidesPerViewValue = (attr) => {\n    const value = swiperElement.getAttribute(attr);\n    if (!value || value === 'default') return defaultSlidesPerView;\n    if (!isNaN(value) && Number(value) > 0) return Number(value);\n    return defaultSlidesPerView;\n  };\n\n  const getSpaceBetweenValue = (attr) => {\n    const value = swiperElement.getAttribute(attr);\n    if (!value || value === 'default') return defaultSpaceBetween;\n    if (!isNaN(value)) return Number(value);\n    return defaultSpaceBetween;\n  };\n\n  const getSpeedValue = (attr) => {\n    const value = swiperElement.getAttribute(attr);\n    if (!value || value === 'default') return defaultSpeed;\n    if (value === 'true') return defaultSpeed;\n    if (!isNaN(value) && Number(value) > 0) return Number(value);\n    return defaultSpeed; // Return defaultSpeed if invalid value\n  };\n\n  const getAutoplayValue = (attr) => {\n    const value = swiperElement.getAttribute(attr);\n    if (!value || value === 'default') return defaultAutoplayDelay;\n    if (value === 'marquee') return marqueeSpeed;\n    if (value === 'true') return defaultAutoplayDelay;\n    if (!isNaN(value) && Number(value) > 0) return Number(value);\n    return false;\n  };\n\n  const getPauseOnMouseEnterValue = (attr) => {\n    const value = swiperElement.getAttribute(attr);\n    if (!value || value === 'default') return true;\n    return value === 'true';\n  };\n\n  const getDynamicBulletsValue = (attr) => {\n    const value = swiperElement.getAttribute(attr);\n    if (!value || value === 'default') return true;\n    return value === 'true';\n  };\n\n  // Helper function for effect numeric values\n  const getEffectValue = (attrName, defaultValue) => {\n    const value = swiperElement.getAttribute(attrName);\n    if (!value || value === 'default' || value === '0' || value === '') {\n      return defaultValue;\n    }\n    if (!isNaN(value)) {\n      return Number(value);\n    }\n    return defaultValue;\n  };\n\n  // Helper function for boolean effect options\n  const getBooleanEffectOption = (attrName) => {\n    const value = swiperElement.getAttribute(attrName);\n    if (!value || value === 'default') return true;\n    if (value === '0' || value === 'false') {\n      return false;\n    }\n    // For 'true' or any other value, return true\n    return true;\n  };\n\n  const slidesPerViewSettings = {\n    desktop: getSlidesPerViewValue('swiperSlidesPerViewDesktop'),\n    tablet: getSlidesPerViewValue('swiperSlidesPerViewTablet'),\n    mobileLandscape: getSlidesPerViewValue('swiperSlidesPerViewMobileLandscape'),\n    mobilePortrait: getSlidesPerViewValue('swiperSlidesPerViewMobilePortrait'),\n  };\n\n  // Determine the maximum slidesPerView value across breakpoints\n  const maxSlidesPerView = Math.max(\n    slidesPerViewSettings.desktop,\n    slidesPerViewSettings.tablet,\n    slidesPerViewSettings.mobileLandscape,\n    slidesPerViewSettings.mobilePortrait\n  );\n\n  const totalSlides = swiperElement.querySelectorAll('.swiper-slide').length;\n\n  // Manually duplicate slides to fill the visible space before initializing Swiper\n  const duplicateSlidesToFillSpace = (swiperElement, slidesPerView) => {\n    const slideCount = swiperElement.querySelectorAll('.swiper-slide').length;\n    const containerWidth = swiperElement.offsetWidth;\n    const slideWidth = containerWidth / slidesPerView;\n    const slidesToAdd = Math.ceil(containerWidth / slideWidth) - slideCount;\n\n    if (slidesToAdd > 0) {\n      const swiperWrapper = swiperElement.querySelector('.swiper-wrapper');\n      const originalSlides = swiperWrapper.innerHTML;\n      let duplicateContent = '';\n      for (let i = 0; i < slidesToAdd; i++) {\n        duplicateContent += originalSlides;\n      }\n      swiperWrapper.innerHTML += duplicateContent;\n    }\n  };\n\n  // Ensure slides are duplicated only if 'swiperFillEmptySlots' is set to 'true'\n  if (fillEmptySlotsAttribute === 'true') {\n    duplicateSlidesToFillSpace(swiperElement, maxSlidesPerView);\n  }\n\n  // Recalculate total slides after possible duplication\n  const updatedTotalSlides = swiperElement.querySelectorAll('.swiper-slide').length;\n\n  // Determine if there are enough slides to enable looping\n  const enoughSlidesForLoop = updatedTotalSlides > maxSlidesPerView;\n\n  // Adjust shouldLoop based on swiperLoop attribute and whether there are enough slides\n  const shouldLoop = loopAttribute === 'true' && enoughSlidesForLoop;\n  const shouldRewind = !shouldLoop && rewindAttribute === 'true';\n  const isRTL = directionAttribute === 'right-to-left';\n\n  let initialSlideIndex = 0;\n  if (startSlideAttribute === 'last') {\n    initialSlideIndex = updatedTotalSlides - 1;\n  } else if (!isNaN(startSlideAttribute) && Number(startSlideAttribute) >= 0) {\n    initialSlideIndex = Number(startSlideAttribute);\n  }\n\n  // Generate a unique class for this Swiper instance\n  const uniqueClass = `swiper-instance-${index}`;\n\n  // Apply unique class to the Swiper element\n  swiperElement.classList.add(uniqueClass);\n\n  // Inject marquee CSS globally but scoped to this specific Swiper instance\n  const injectMarqueeCSS = (uniqueClass) => {\n    const marqueeStyle = `\n      .${uniqueClass} .swiper-wrapper {\n        -webkit-transition-timing-function: linear !important;\n        -o-transition-timing-function: linear !important;\n        transition-timing-function: linear !important;\n      }\n    `;\n\n    const existingStyleElement = document.getElementById(`marquee-style-${uniqueClass}`);\n    if (existingStyleElement) {\n      existingStyleElement.remove();\n    }\n\n    const styleElement = document.createElement('style');\n    styleElement.id = `marquee-style-${uniqueClass}`;\n    styleElement.textContent = marqueeStyle;\n    document.head.appendChild(styleElement);\n  };\n\n  const autoplayMarqueeEnabled =\n    swiperElement.getAttribute('swiperAutoplayDesktop') === 'marquee' ||\n    swiperElement.getAttribute('swiperAutoplayTablet') === 'marquee' ||\n    swiperElement.getAttribute('swiperAutoplayMobileLandscape') === 'marquee' ||\n    swiperElement.getAttribute('swiperAutoplayMobilePortrait') === 'marquee';\n\n  // Inject the marquee CSS if autoplay is set to \"marquee\"\n  if (autoplayMarqueeEnabled) {\n    injectMarqueeCSS(uniqueClass);\n  }\n\n  const spaceBetweenSettings = {\n    desktop: getSpaceBetweenValue('swiperSpaceBetweenDesktop'),\n    tablet: getSpaceBetweenValue('swiperSpaceBetweenTablet'),\n    mobileLandscape: getSpaceBetweenValue('swiperSpaceBetweenMobileLandscape'),\n    mobilePortrait: getSpaceBetweenValue('swiperSpaceBetweenMobilePortrait'),\n  };\n\n  const speedSettings = {\n    desktop: getSpeedValue('swiperSpeedDesktop'),\n    tablet: getSpeedValue('swiperSpeedTablet'),\n    mobileLandscape: getSpeedValue('swiperSpeedMobileLandscape'),\n    mobilePortrait: getSpeedValue('swiperSpeedMobilePortrait'),\n  };\n\n  const autoplaySettings = {\n    desktop: getAutoplayValue('swiperAutoplayDesktop'),\n    tablet: getAutoplayValue('swiperAutoplayTablet'),\n    mobileLandscape: getAutoplayValue('swiperAutoplayMobileLandscape'),\n    mobilePortrait: getAutoplayValue('swiperAutoplayMobilePortrait'),\n  };\n\n  const dynamicBulletsSettings = {\n    desktop: getDynamicBulletsValue('swiperDynamicBulletsDesktop'),\n    tablet: getDynamicBulletsValue('swiperDynamicBulletsTablet'),\n    mobileLandscape: getDynamicBulletsValue('swiperDynamicBulletsMobileLandscape'),\n    mobilePortrait: getDynamicBulletsValue('swiperDynamicBulletsMobilePortrait'),\n  };\n\n  const pauseSettings = {\n    desktop: getPauseOnMouseEnterValue('swiperPauseOnMouseEnterDesktop'),\n    tablet: getPauseOnMouseEnterValue('swiperPauseOnMouseEnterTablet'),\n    mobileLandscape: getPauseOnMouseEnterValue('swiperPauseOnMouseEnterMobileLandscape'),\n    mobilePortrait: getPauseOnMouseEnterValue('swiperPauseOnMouseEnterMobilePortrait'),\n  };\n\n  const bulletPaginationEl = swiperNavigation.querySelector(\n    '.swiper-pagination.is-bullets.is-standard'\n  );\n\n  const defaultBulletClasses = [\n    'swiper-pagination-bullet',\n    'swiper-bullet-default',\n    'is-standard',\n    'swiper-pagination-bullet-active',\n  ];\n  const extraBulletClasses = Array.from(\n    bulletPaginationEl ? bulletPaginationEl.children[0].classList : []\n  ).filter((item) => !defaultBulletClasses.includes(item));\n\n  const fractionPaginationEl = swiperNavigation.querySelector(\n    '.swiper-pagination.is-fraction.is-standard'\n  );\n  const scrollbarPaginationEl = swiperNavigation.querySelector(\n    '.swiper-pagination.swiper-scrollbar.is-standard'\n  );\n  const progressPaginationEl = swiperNavigation.querySelector(\n    '.swiper-pagination.swiper-pagination-progressbar.is-standard'\n  );\n\n  const paginationEl =\n    bulletPaginationEl || fractionPaginationEl || progressPaginationEl || scrollbarPaginationEl;\n\n  // Determine the Swiper effect\n  let effectValue = 'slide'; // Default effect\n  if (effectAttribute && !['none', '0', '', 'slide', 'default'].includes(effectAttribute)) {\n    effectValue = effectAttribute;\n  }\n\n  // List of effects that require slidesPerView: 1\n  const effectsRequiringSingleSlide = ['fade', 'cube', 'flip', 'cards'];\n\n  // Check if the current effect requires slidesPerView: 1\n  const requiresSingleSlide = effectsRequiringSingleSlide.includes(effectValue);\n\n  // Effect-specific options\n  const effectOptions = {};\n\n  if (effectValue === 'fade') {\n    // Handle the swiperEffectFadeCrossfade attribute\n    const crossFadeValue = getBooleanEffectOption('swiperEffectFadeCrossfade');\n\n    effectOptions.fadeEffect = { crossFade: crossFadeValue };\n  } else if (effectValue === 'cube') {\n    // Get cube effect options\n    const cubeShadow = getBooleanEffectOption('swiperEffectCubeShadow');\n    const cubeSlideShadows = getBooleanEffectOption('swiperEffectCubeSlideShadows');\n\n    // Get cube shadow offset and scale values\n    const cubeShadowOffset = getEffectValue('swiperEffectCubeShadowShadowOffset', 20);\n    const cubeShadowScale = getEffectValue('swiperEffectCubeShadowShadowScale', 0.94);\n\n    effectOptions.cubeEffect = {\n      shadow: cubeShadow,\n      slideShadows: cubeSlideShadows,\n      shadowOffset: cubeShadowOffset,\n      shadowScale: cubeShadowScale,\n    };\n  } else if (effectValue === 'coverflow') {\n    // Get Coverflow effect values\n    const coverflowDefaults = {\n      depth: 100,\n      modifier: 1,\n      rotate: 50,\n      scale: 1,\n      stretch: 0,\n    };\n\n    const coverflowRotate = getEffectValue('swiperEffectCoverflowRotate', coverflowDefaults.rotate);\n    const coverflowStretch = getEffectValue(\n      'swiperEffectCoverflowStretch',\n      coverflowDefaults.stretch\n    );\n    const coverflowDepth = getEffectValue('swiperEffectCoverflowDepth', coverflowDefaults.depth);\n    const coverflowModifier = getEffectValue(\n      'swiperEffectCoverflowModifier',\n      coverflowDefaults.modifier\n    );\n    const coverflowScale = getEffectValue('swiperEffectCoverflowScale', coverflowDefaults.scale);\n\n    // Handle the swiperEffectCoverflowSlideShadows attribute\n    const coverflowSlideShadows = getBooleanEffectOption('swiperEffectCoverflowSlideShadows');\n\n    effectOptions.coverflowEffect = {\n      rotate: coverflowRotate,\n      stretch: coverflowStretch,\n      depth: coverflowDepth,\n      modifier: coverflowModifier,\n      scale: coverflowScale,\n      slideShadows: coverflowSlideShadows,\n    };\n  } else if (effectValue === 'flip') {\n    // Get flip effect options\n    const flipLimitRotation = getBooleanEffectOption('swiperEffectFlipLimitRotation');\n    const flipSlideShadows = getBooleanEffectOption('swiperEffectFlipSlideShadows');\n\n    effectOptions.flipEffect = {\n      slideShadows: flipSlideShadows,\n      limitRotation: flipLimitRotation,\n    };\n  } else if (effectValue === 'cards') {\n    // Get cards effect options\n    const cardsPerSlideOffset = getEffectValue('swiperEffectCardsPerSlideOffset', 8);\n    const cardsPerSlideRotate = getEffectValue('swiperEffectCardsPerSlideRotate', 2);\n    const cardsRotate = getBooleanEffectOption('swiperEffectCardsRotate');\n    const cardsSlideShadows = getBooleanEffectOption('swiperEffectCardsSlideShadows');\n\n    effectOptions.cardsEffect = {\n      perSlideOffset: cardsPerSlideOffset,\n      perSlideRotate: cardsPerSlideRotate,\n      rotate: cardsRotate,\n      slideShadows: cardsSlideShadows,\n    };\n  } else if (effectValue === 'creative') {\n    effectOptions.creativeEffect = {\n      prev: {\n        shadow: true,\n        translate: [0, 0, -400],\n      },\n      next: {\n        translate: [0, 0, -400],\n      },\n    };\n  }\n\n  // Adjust slidesPerView if the effect requires a single slide\n  const initialSlidesPerView = requiresSingleSlide ? 1 : slidesPerViewSettings.mobilePortrait;\n\n  // Initialize Swiper\n  const swiper = new Swiper(swiperElement, {\n    effect: effectValue,\n    ...effectOptions,\n    slidesPerView: initialSlidesPerView,\n    slidesPerGroup: 1, // Ensure it moves one slide at a time\n    spaceBetween: spaceBetweenSettings.mobilePortrait,\n    speed: speedSettings.mobilePortrait,\n    initialSlide: initialSlideIndex,\n    pagination: {\n      el: paginationEl,\n      type: bulletPaginationEl\n        ? 'bullets'\n        : fractionPaginationEl\n          ? 'fraction'\n          : progressPaginationEl\n            ? 'progressbar'\n            : 'custom',\n      dynamicBullets: dynamicBulletsSettings.mobilePortrait,\n      renderBullet: bulletPaginationEl\n        ? function (index, className) {\n            return `<button class=\"${className} ${extraBulletClasses.join(' ')} swiper-bullet-default is-standard\"></button>`;\n          }\n        : undefined,\n      clickable: !!bulletPaginationEl,\n      renderFraction: fractionPaginationEl\n        ? function (currentClass, totalClass) {\n            return `<span class=\"${currentClass}\"></span> / <span class=\"${totalClass}\"></span>`;\n          }\n        : undefined,\n      progressbarFillClass: 'swiper-pagination-progressbar-fill is-standard',\n    },\n    scrollbar: {\n      el: scrollbarPaginationEl,\n      dragClass: 'swiper-scrollbar-drag is-standard',\n      draggable: true,\n      snapOnRelease: false,\n      dragSize: 'auto',\n    },\n    autoplay: autoplaySettings.mobilePortrait\n      ? {\n          delay: autoplaySettings.mobilePortrait,\n          disableOnInteraction: false,\n          reverseDirection: isRTL,\n          pauseOnMouseEnter: false,\n        }\n      : false,\n    loop: shouldLoop,\n    loopFillGroupWithBlank: fillEmptySlotsAttribute === 'true',\n    rewind: shouldRewind,\n    grabCursor: true, // Enable the grab cursor\n    breakpoints: {\n      992: {\n        slidesPerView: requiresSingleSlide ? 1 : slidesPerViewSettings.desktop,\n        slidesPerGroup: 1, // Ensure it moves one slide at a time\n        spaceBetween: spaceBetweenSettings.desktop,\n        speed: speedSettings.desktop,\n        autoplay: autoplaySettings.desktop\n          ? {\n              delay: autoplaySettings.desktop,\n              disableOnInteraction: false,\n              reverseDirection: isRTL,\n            }\n          : false,\n        pagination: {\n          dynamicBullets: dynamicBulletsSettings.desktop,\n        },\n      },\n      768: {\n        slidesPerView: requiresSingleSlide ? 1 : slidesPerViewSettings.tablet,\n        slidesPerGroup: 1, // Ensure it moves one slide at a time\n        spaceBetween: spaceBetweenSettings.tablet,\n        speed: speedSettings.tablet,\n        autoplay: autoplaySettings.tablet\n          ? {\n              delay: autoplaySettings.tablet,\n              disableOnInteraction: false,\n              reverseDirection: isRTL,\n            }\n          : false,\n        pagination: {\n          dynamicBullets: dynamicBulletsSettings.tablet,\n        },\n      },\n      480: {\n        slidesPerView: requiresSingleSlide ? 1 : slidesPerViewSettings.mobileLandscape,\n        slidesPerGroup: 1, // Ensure it moves one slide at a time\n        spaceBetween: spaceBetweenSettings.mobileLandscape,\n        speed: speedSettings.mobileLandscape,\n        autoplay: autoplaySettings.mobileLandscape\n          ? {\n              delay: autoplaySettings.mobileLandscape,\n              disableOnInteraction: false,\n              reverseDirection: isRTL,\n            }\n          : false,\n        pagination: {\n          dynamicBullets: dynamicBulletsSettings.mobileLandscape,\n        },\n      },\n    },\n    on: {\n      init: function () {\n        if (fractionPaginationEl) {\n          const fractionText = swiperNavigation.querySelector('.swiper-pagination-fraction-text');\n          if (fractionText) {\n            fractionText.textContent = `${this.realIndex + 1} / ${this.slides.length}`;\n          }\n        }\n\n        if (progressPaginationEl) {\n          const progressBarFill = progressPaginationEl.querySelector(\n            '.swiper-pagination-progressbar-fill'\n          );\n          if (progressBarFill) {\n            const progress = (this.realIndex + 1) / this.slides.length;\n            progressBarFill.style.transform = `scaleX(${progress})`;\n          }\n        }\n      },\n      slideChange: function () {\n        if (fractionPaginationEl) {\n          const fractionText = swiperNavigation.querySelector('.swiper-pagination-fraction-text');\n          if (fractionText) {\n            fractionText.textContent = `${this.realIndex + 1} / ${this.slides.length}`;\n          }\n        }\n\n        if (progressPaginationEl) {\n          const progressBarFill = progressPaginationEl.querySelector(\n            '.swiper-pagination-progressbar-fill'\n          );\n          if (progressBarFill) {\n            const progress = (this.realIndex + 1) / this.slides.length;\n            progressBarFill.style.transform = `scaleX(${progress})`;\n          }\n        }\n      },\n      reachEnd: function () {\n        // Stop autoplay if swiperRewind and swiperLoop are both false\n        if (!shouldRewind && !shouldLoop) {\n          this.autoplay.stop();\n        }\n      },\n      scrollbarDragStart: function () {\n        this.autoplay.stop();\n        this.params.loop = false;\n        this.update();\n      },\n      scrollbarDragEnd: function () {\n        this.params.loop = shouldLoop;\n        this.update();\n        this.autoplay.start();\n      },\n    },\n  });\n\n  // Optional: Warn the user if slidesPerView is overridden\n  if (requiresSingleSlide) {\n    console.warn(\n      `The \"${effectValue}\" effect requires slidesPerView to be 1. Overriding slidesPerView to 1.`\n    );\n  }\n\n  // Manually handle the navigation buttons\n  const nextButton = swiperNavigation.querySelector(\n    '.swiper-navigation-button.is-standard.is-next'\n  );\n  const prevButton = swiperNavigation.querySelector(\n    '.swiper-navigation-button.is-standard.is-prev'\n  );\n\n  nextButton.addEventListener('click', (event) => {\n    event.preventDefault(); // Prevent any default action\n    swiper.autoplay.stop();\n    swiper.slideNext(defaultSpeed);\n  });\n\n  prevButton.addEventListener('click', (event) => {\n    event.preventDefault(); // Prevent any default action\n    swiper.autoplay.stop();\n    swiper.slidePrev(defaultSpeed);\n  });\n\n  const mouseEnterHandler = () => {\n    swiper.autoplay.stop();\n    swiper.setTranslate(swiper.translate);\n  };\n\n  const mouseLeaveHandler = () => {\n    swiper.autoplay.start();\n  };\n\n  const handlePauseOnMouseEvents = () => {\n    const { currentBreakpoint } = swiper;\n    let pauseOnMouseEnter = pauseSettings.mobilePortrait;\n\n    if (currentBreakpoint >= 992) {\n      pauseOnMouseEnter = pauseSettings.desktop;\n    } else if (currentBreakpoint >= 768) {\n      pauseOnMouseEnter = pauseSettings.tablet;\n    } else if (currentBreakpoint >= 480) {\n      pauseOnMouseEnter = pauseSettings.mobileLandscape;\n    }\n\n    if (pauseOnMouseEnter) {\n      swiperElement.addEventListener('mouseenter', mouseEnterHandler);\n      swiperElement.addEventListener('mouseleave', mouseLeaveHandler);\n    } else {\n      swiperElement.removeEventListener('mouseenter', mouseEnterHandler);\n      swiperElement.removeEventListener('mouseleave', mouseLeaveHandler);\n    }\n  };\n\n  handlePauseOnMouseEvents();\n\n  swiper.on('breakpoint', () => {\n    handlePauseOnMouseEvents();\n  });\n});\n"],
  "mappings": "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",
  "names": ["swiperElement", "uniqueClass", "index"]
}
